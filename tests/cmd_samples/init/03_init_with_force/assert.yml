exit_code: 0
stdout:
  - match_type: ORDERED_LINES
    content: |
      === First initialization ===

      To activate this configuration for your current session, you can run:
      # REGEX: .*export GYDNC_CONFIG.*\.gydnc/config\.yml.*
      Consider adding this line to your shell configuration file (e.g., ~/.zshrc or ~/.bashrc) for persistent use.
      [
        {
          "alias": "test-entity",
          "title": "Test Entity",
          "description": "",
          "tags": null
        }
      ]

      === Second initialization without --force (should fail) ===
      Second init without --force failed as expected

      === Third initialization with --force (should succeed) ===

      To activate this configuration for your current session, you can run:
      # REGEX: .*export GYDNC_CONFIG.*\.gydnc/config\.yml.*
      Consider adding this line to your shell configuration file (e.g., ~/.zshrc or ~/.bashrc) for persistent use.

      === Verify list still works after force init ===
      [
        {
          "alias": "test-entity",
          "title": "Test Entity",
          "description": "",
          "tags": null
        }
      ]
stderr:
  - match_type: ORDERED_LINES
    content: |
      # REGEX: level=INFO msg="Target base path for initialization set" path=.*
      # REGEX: level=INFO msg="gydnc initialized successfully" path=.*
      # REGEX: level=INFO msg="Successfully created guidance." alias=test-entity backend=default_local
      # REGEX: level=INFO msg="Target base path for initialization set" path=.*
      # REGEX: level=INFO msg="gydnc initialized successfully" path=.*
filesystem:
  - path: ".gydnc"
    exists: true
    is_dir: true
  - path: ".gydnc/config.yml"
    exists: true
  - path: ".gydnc/tag_ontology.md"
    exists: true
  - path: ".gydnc/test-entity.g6e" # Check that entity is created/recreated
    exists: true